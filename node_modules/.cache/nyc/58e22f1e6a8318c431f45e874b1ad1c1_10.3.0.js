"use strict";var cov_vre7klcaj=function(){var path="C:\\Users\\chadc\\Documents\\git-projects\\infusion\\dist\\src\\infusion-server\\domain\\infusion-modification.js",hash="cfc91e81b0100a0a84c6785655a2855da8f96a59",global=new Function('return this')(),gcv="__coverage__",coverageData={path:"C:\\Users\\chadc\\Documents\\git-projects\\infusion\\dist\\src\\infusion-server\\domain\\infusion-modification.js",statementMap:{"0":{start:{line:2,column:0},end:{line:2,column:62}},"1":{start:{line:4,column:0},end:{line:7,column:107}},"2":{start:{line:5,column:4},end:{line:5,column:82}},"3":{start:{line:6,column:4},end:{line:6,column:80}},"4":{start:{line:10,column:8},end:{line:10,column:35}},"5":{start:{line:11,column:8},end:{line:11,column:33}},"6":{start:{line:12,column:8},end:{line:12,column:49}},"7":{start:{line:13,column:8},end:{line:13,column:37}},"8":{start:{line:16,column:21},end:{line:16,column:23}},"9":{start:{line:17,column:8},end:{line:17,column:37}},"10":{start:{line:27,column:8},end:{line:27,column:22}},"11":{start:{line:46,column:0},end:{line:46,column:52}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:4,column:1},end:{line:4,column:2}},loc:{start:{line:4,column:37},end:{line:7,column:1}},line:4},"1":{name:"(anonymous_1)",decl:{start:{line:9,column:4},end:{line:9,column:5}},loc:{start:{line:9,column:67},end:{line:14,column:5}},line:9},"2":{name:"(anonymous_2)",decl:{start:{line:15,column:4},end:{line:15,column:5}},loc:{start:{line:15,column:29},end:{line:28,column:5}},line:15}},branchMap:{"0":{loc:{start:{line:7,column:30},end:{line:7,column:105}},type:"binary-expr",locations:[{start:{line:7,column:30},end:{line:7,column:62}},{start:{line:7,column:67},end:{line:7,column:104}}],line:7}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},f:{"0":0,"1":0,"2":0},b:{"0":[0,0]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();++cov_vre7klcaj.s[0];Object.defineProperty(exports,"__esModule",{value:true});var InfusionModificationType;++cov_vre7klcaj.s[1];(function(InfusionModificationType){++cov_vre7klcaj.f[0];++cov_vre7klcaj.s[2];InfusionModificationType[InfusionModificationType["Replace"]=0]="Replace";++cov_vre7klcaj.s[3];InfusionModificationType[InfusionModificationType["Append"]=1]="Append";})(InfusionModificationType=(++cov_vre7klcaj.b[0][0],exports.InfusionModificationType)||(++cov_vre7klcaj.b[0][1],exports.InfusionModificationType={}));class InfusionModification{constructor(cssQuery,newMarkup,modificationType,urlPattern){++cov_vre7klcaj.f[1];++cov_vre7klcaj.s[4];this.newMarkup=newMarkup;++cov_vre7klcaj.s[5];this.cssQuery=cssQuery;++cov_vre7klcaj.s[6];this.modificationType=modificationType;++cov_vre7klcaj.s[7];this.urlPattern=urlPattern;}convertToQueryFunction(){++cov_vre7klcaj.f[2];let select=(++cov_vre7klcaj.s[8],{});++cov_vre7klcaj.s[9];select.query=this.cssQuery;/* istanbul ignore next */select.func=node=>{if(this.modificationType===InfusionModificationType.Append){this.append(node,this.newMarkup);}else{this.replace(node,this.newMarkup);}};++cov_vre7klcaj.s[10];return select;}/* istanbul ignore next */replace(node,newText){node.createWriteStream().end(newText);}/* istanbul ignore next */append(node,newMarkup){var rs=node.createReadStream();var ws=node.createWriteStream({outer:false});// Read the node and put it back into our write stream, 
// but don't end the write stream when the readStream is closed.
rs.pipe(ws,{end:false});// When the read stream has ended, attach our style to the end
rs.on('end',function(){ws.end(newMarkup);});}}++cov_vre7klcaj.s[11];exports.InfusionModification=InfusionModification;