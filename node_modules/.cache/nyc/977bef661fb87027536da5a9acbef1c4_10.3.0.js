"use strict";var cov_17q4at75r5=function(){var path="C:\\Users\\chadc\\Documents\\git-projects\\infusion\\dist\\src\\winston-logger.js",hash="dbd0c972242825fdac3df2c28ec413d833dae335",global=new Function('return this')(),gcv="__coverage__",coverageData={path:"C:\\Users\\chadc\\Documents\\git-projects\\infusion\\dist\\src\\winston-logger.js",statementMap:{"0":{start:{line:2,column:0},end:{line:2,column:62}},"1":{start:{line:3,column:16},end:{line:3,column:34}},"2":{start:{line:43,column:0},end:{line:43,column:32}}},fnMap:{},branchMap:{},s:{"0":0,"1":0,"2":0},f:{},b:{},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();++cov_17q4at75r5.s[0];Object.defineProperty(exports,"__esModule",{value:true});const winston=(++cov_17q4at75r5.s[1],require("winston"));class WinstonLog{/* istanbul ignore next */constructor(){this.tsFormat=()=>new Date().toLocaleTimeString();this._logger=new winston.Logger({transports:[new winston.transports.Console({timestamp:this.tsFormat,colorize:true})]});}/* istanbul ignore next */get level(){return this._logger.level;}/* istanbul ignore next */set level(value){this._logger.level=value;}/* istanbul ignore next */debug(message){console.log(message);this._logger.debug(message);}/* istanbul ignore next */warn(message){this._logger.warn(message);}/* istanbul ignore next */error(message){this._logger.error(message);}/* istanbul ignore next */info(message){this._logger.info(message);}}++cov_17q4at75r5.s[2];exports.WinstonLog=WinstonLog;