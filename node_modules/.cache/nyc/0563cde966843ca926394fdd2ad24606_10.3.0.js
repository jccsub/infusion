"use strict";var cov_hlfculsf1=function(){var path="C:\\Users\\chadc\\Documents\\git-projects\\infusion\\dist\\src\\infusion-server\\domain-services\\event-handlers\\infusion-response-handler.js",hash="e11f756297ce5199377637f4ba61ac414965106b",global=new Function('return this')(),gcv="__coverage__",coverageData={path:"C:\\Users\\chadc\\Documents\\git-projects\\infusion\\dist\\src\\infusion-server\\domain-services\\event-handlers\\infusion-response-handler.js",statementMap:{"0":{start:{line:2,column:0},end:{line:2,column:62}},"1":{start:{line:5,column:8},end:{line:5,column:23}},"2":{start:{line:6,column:8},end:{line:6,column:31}},"3":{start:{line:7,column:8},end:{line:7,column:33}},"4":{start:{line:8,column:8},end:{line:8,column:40}},"5":{start:{line:9,column:8},end:{line:9,column:23}},"6":{start:{line:12,column:8},end:{line:12,column:61}},"7":{start:{line:15,column:8},end:{line:15,column:68}},"8":{start:{line:16,column:8},end:{line:16,column:62}},"9":{start:{line:19,column:0},end:{line:19,column:58}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:4,column:4},end:{line:4,column:5}},loc:{start:{line:4,column:45},end:{line:10,column:5}},line:4},"1":{name:"(anonymous_1)",decl:{start:{line:11,column:4},end:{line:11,column:5}},loc:{start:{line:11,column:18},end:{line:13,column:5}},line:11},"2":{name:"(anonymous_2)",decl:{start:{line:14,column:4},end:{line:14,column:5}},loc:{start:{line:14,column:12},end:{line:17,column:5}},line:14}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},f:{"0":0,"1":0,"2":0},b:{},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();++cov_hlfculsf1.s[0];Object.defineProperty(exports,"__esModule",{value:true});class InfusionResponseHandler{constructor(log,context,proxyRes,res){++cov_hlfculsf1.f[0];++cov_hlfculsf1.s[1];this.log=log;++cov_hlfculsf1.s[2];this.context=context;++cov_hlfculsf1.s[3];this.proxyRes=proxyRes;++cov_hlfculsf1.s[4];this.context.response.body='';++cov_hlfculsf1.s[5];this.res=res;}onData(chunk){++cov_hlfculsf1.f[1];++cov_hlfculsf1.s[6];this.context.response.body+=chunk.toString('utf8');}onEnd(){++cov_hlfculsf1.f[2];++cov_hlfculsf1.s[7];this.context.response.statusCode=this.proxyRes.statusCode;++cov_hlfculsf1.s[8];this.context.response.headers=this.proxyRes.headers;}}++cov_hlfculsf1.s[9];exports.InfusionResponseHandler=InfusionResponseHandler;